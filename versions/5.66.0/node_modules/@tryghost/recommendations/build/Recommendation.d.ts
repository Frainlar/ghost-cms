/// <reference types="node" />
/**
 * We never expose Entities outside of services. Because we should never expose the bussiness logic methods. The plain objects are used for that
 */
export type RecommendationPlain = {
    id: string;
    title: string;
    reason: string | null;
    excerpt: string | null;
    featuredImage: URL | null;
    favicon: URL | null;
    url: URL;
    oneClickSubscribe: boolean;
    createdAt: Date;
    updatedAt: Date | null;
};
export type RecommendationCreateData = {
    id?: string;
    title: string;
    reason: string | null;
    excerpt: string | null;
    featuredImage: URL | string | null;
    favicon: URL | string | null;
    url: URL | string;
    oneClickSubscribe: boolean;
    createdAt?: Date;
    updatedAt?: Date | null;
};
export type AddRecommendation = Omit<RecommendationCreateData, 'id' | 'createdAt' | 'updatedAt'>;
export type EditRecommendation = Partial<AddRecommendation>;
export declare class Recommendation {
    #private;
    id: string;
    title: string;
    reason: string | null;
    excerpt: string | null;
    featuredImage: URL | null;
    favicon: URL | null;
    url: URL;
    oneClickSubscribe: boolean;
    createdAt: Date;
    updatedAt: Date | null;
    get deleted(): boolean;
    private constructor();
    static validate(properties: AddRecommendation): void;
    clean(): void;
    cleanURL(url: URL): URL;
    static create(data: RecommendationCreateData): Recommendation;
    get plain(): RecommendationPlain;
    /**
     * Change the specified properties. Properties that are set to undefined will not be changed
     */
    edit(properties: EditRecommendation): void;
    delete(): void;
}
